
AVR_DA_WakeUp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000001ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000198  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003236  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002d6d  00000000  00000000  000034ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d4  00000000  00000000  00006227  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  000065fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000180d  00000000  00000000  0000664c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000009e  00000000  00000000  00007e59  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00007ef7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 76 00 	jmp	0xec	; 0xec <__ctors_end>
   4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  10:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  14:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  18:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  1c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  20:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  24:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  28:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  2c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  30:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  34:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  38:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  3c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  40:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  44:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  48:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  4c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  50:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  54:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  58:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  5c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  60:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  64:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  68:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  6c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  70:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  74:	0c 94 82 00 	jmp	0x104	; 0x104 <__vector_29>
  78:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  7c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  80:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  84:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  88:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  8c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  90:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  94:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  98:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  9c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  ac:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  bc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  cc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  dc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>

000000ec <__ctors_end>:
  ec:	11 24       	eor	r1, r1
  ee:	1f be       	out	0x3f, r1	; 63
  f0:	cf ef       	ldi	r28, 0xFF	; 255
  f2:	cd bf       	out	0x3d, r28	; 61
  f4:	df e7       	ldi	r29, 0x7F	; 127
  f6:	de bf       	out	0x3e, r29	; 62
  f8:	0e 94 9d 00 	call	0x13a	; 0x13a <main>
  fc:	0c 94 ca 00 	jmp	0x194	; 0x194 <_exit>

00000100 <__bad_interrupt>:
 100:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000104 <__vector_29>:
{
    SLPCTRL.CTRLA = SLPCTRL_SMODE_IDLE_gc;
}

ISR(PORTC_PORT_vect)
{
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	0b b6       	in	r0, 0x3b	; 59
 110:	0f 92       	push	r0
 112:	8f 93       	push	r24
 114:	ef 93       	push	r30
 116:	ff 93       	push	r31
    PORTC.OUT &= ~PIN6_bm;
 118:	e0 e4       	ldi	r30, 0x40	; 64
 11a:	f4 e0       	ldi	r31, 0x04	; 4
 11c:	84 81       	ldd	r24, Z+4	; 0x04
 11e:	8f 7b       	andi	r24, 0xBF	; 191
 120:	84 83       	std	Z+4, r24	; 0x04
    PORTC.INTFLAGS = PIN7_bm;
 122:	80 e8       	ldi	r24, 0x80	; 128
 124:	81 87       	std	Z+9, r24	; 0x09
}
 126:	ff 91       	pop	r31
 128:	ef 91       	pop	r30
 12a:	8f 91       	pop	r24
 12c:	0f 90       	pop	r0
 12e:	0b be       	out	0x3b, r0	; 59
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <main>:
static void PORT_init(void);
static void SLPCTRL_init(void);

static void PORT_init(void)
{
    PORTC.DIR |= PIN6_bm;
 13a:	e0 e4       	ldi	r30, 0x40	; 64
 13c:	f4 e0       	ldi	r31, 0x04	; 4
 13e:	80 81       	ld	r24, Z
 140:	80 64       	ori	r24, 0x40	; 64
 142:	80 83       	st	Z, r24
    PORTC.OUT |= PIN6_bm;
 144:	84 81       	ldd	r24, Z+4	; 0x04
 146:	80 64       	ori	r24, 0x40	; 64
 148:	84 83       	std	Z+4, r24	; 0x04

    PORTC.DIR &= ~PIN7_bm;
 14a:	80 81       	ld	r24, Z
 14c:	8f 77       	andi	r24, 0x7F	; 127
 14e:	80 83       	st	Z, r24
    PORTC.PIN7CTRL |= PORT_PULLUPEN_bm | PORT_ISC_FALLING_gc;
 150:	87 89       	ldd	r24, Z+23	; 0x17
 152:	8b 60       	ori	r24, 0x0B	; 11
 154:	87 8b       	std	Z+23, r24	; 0x17
}

static void SLPCTRL_init(void)
{
    SLPCTRL.CTRLA = SLPCTRL_SMODE_IDLE_gc;
 156:	10 92 50 00 	sts	0x0050, r1	; 0x800050 <__TEXT_REGION_LENGTH__+0x7e0050>

int main(void)
{
    PORT_init();
    SLPCTRL_init();
    sei();
 15a:	78 94       	sei

    while (1) 
    {
        sleep_mode();
 15c:	e0 e5       	ldi	r30, 0x50	; 80
 15e:	f0 e0       	ldi	r31, 0x00	; 0
        _delay_ms(200);

        PORTC.OUT |= PIN6_bm;
 160:	a0 e4       	ldi	r26, 0x40	; 64
 162:	b4 e0       	ldi	r27, 0x04	; 4
    SLPCTRL_init();
    sei();

    while (1) 
    {
        sleep_mode();
 164:	80 81       	ld	r24, Z
 166:	81 60       	ori	r24, 0x01	; 1
 168:	80 83       	st	Z, r24
 16a:	88 95       	sleep
 16c:	80 81       	ld	r24, Z
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	80 e7       	ldi	r24, 0x70	; 112
 176:	92 e0       	ldi	r25, 0x02	; 2
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0x3e>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x48>
 182:	00 00       	nop
        _delay_ms(200);

        PORTC.OUT |= PIN6_bm;
 184:	14 96       	adiw	r26, 0x04	; 4
 186:	8c 91       	ld	r24, X
 188:	14 97       	sbiw	r26, 0x04	; 4
 18a:	80 64       	ori	r24, 0x40	; 64
 18c:	14 96       	adiw	r26, 0x04	; 4
 18e:	8c 93       	st	X, r24
 190:	14 97       	sbiw	r26, 0x04	; 4
 192:	e8 cf       	rjmp	.-48     	; 0x164 <main+0x2a>

00000194 <_exit>:
 194:	f8 94       	cli

00000196 <__stop_program>:
 196:	ff cf       	rjmp	.-2      	; 0x196 <__stop_program>
